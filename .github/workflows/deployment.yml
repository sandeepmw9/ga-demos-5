name: deployment
on:
  push:
    branches:
      - master
      - dev
env: #defining env variables on workflow level
  MONGODB_DB_NAME: ga-demos
jobs:
  test:
    environment: testing
    env: #defining env variables on job level
      MONGODB_CLUSTER_ADDRESS: ga-demos.wsvjx.mongodb.net
      MONGODB_USERNAME: ${{ secrets.MONGODB_USERNAME }} #updated the id/password using secrets context
      MONGODB_PASSWORD: ${{ secrets.MONGODB_PASSWORD }}
      PORT: 8080
    runs-on: ubuntu-latest
    steps:
      - name: get code
        uses: actions/checkout@v4
      - name: cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: npm-dependencies-${{ hashFiles('**/package-lock.json')}}
      - name: install dependencies
        run: npm ci
      - name: run server
        run: npm start & npx wait-on http://127.0.0.1:$PORT #here $PORT gives the access to env variables using shell method
      - name: run tests
        run: npm run test
      - name: output info
        run: | # using the env variables with help of env context
          echo "MONGODB_USERNAME: ${{ env.MONGODB_USERNAME }}"
          
  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: output info
        run: | #here as we can see the MONGODB_USERNAME is defined on job level and hence its not accessible in this deploy job, resulting the error
          echo "MONGODB_USERNAME: ${{ env.MONGODB_USERNAME }}" 
          echo "MONGODB_DB_NAME: $MONGODB_DB_NAME"